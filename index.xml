<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome! on</title><link>https://jackeryli.github.io/</link><description>Recent content in Welcome! on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://jackeryli.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Debug xv6 with gdb</title><link>https://jackeryli.github.io/xv6/xv6-gdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/xv6/xv6-gdb/</guid><description> Preparation # # Run xv6 with gdb make qemu-gdb # Change to another terminal and connect to xv6-gdb gdb-multiarch -x .gdbinit Basic Command # # Set break point b syscall b module.c:67 # Continue c # Step into step # Step over next # List value of register info register # List args info args # See who call it backtrace # Set value set xxx # Watching variable watch a</description></item><item><title>Implement isatty on xv6</title><link>https://jackeryli.github.io/xv6/xv6-isatty/</link><pubDate>Wed, 24 Jan 2024 12:16:46 +0800</pubDate><guid>https://jackeryli.github.io/xv6/xv6-isatty/</guid><description>I desire to fix the bug that it prints a $ when processing shell commands from a file.</description></item><item><title>Implement xargs on xv6</title><link>https://jackeryli.github.io/xv6/xv6-xargs/</link><pubDate>Tue, 23 Jan 2024 12:16:46 +0800</pubDate><guid>https://jackeryli.github.io/xv6/xv6-xargs/</guid><description>Implement xargs on xv6</description></item><item><title>Implement pwd on xv6</title><link>https://jackeryli.github.io/xv6/xv6-pwd/</link><pubDate>Mon, 22 Jan 2024 12:16:46 +0800</pubDate><guid>https://jackeryli.github.io/xv6/xv6-pwd/</guid><description>pwd will print working directory. Here we will implement pwd on xv6.</description></item><item><title>xv6 lab trap</title><link>https://jackeryli.github.io/xv6/xv6-lab-trap/</link><pubDate>Wed, 11 Oct 2023 12:16:46 +0800</pubDate><guid>https://jackeryli.github.io/xv6/xv6-lab-trap/</guid><description>Implement MIT xv6 lab:trap</description></item><item><title>2966. Divide Array Into Arrays With Max Difference</title><link>https://jackeryli.github.io/leetcode/2966/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/leetcode/2966/</guid><description>class Solution { public: vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; divideArray(vector&amp;lt;int&amp;gt;&amp;amp; nums, int k) { // sort array from small to large // divide into 3 part // iterate and check if part[0] - part[2] is bigger than k // if yes, return empty vector // if no, assign part[0], part[1], part[2] to one vector sort(nums.begin(), nums.end()); vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; ans = {nums.size()/3, vector&amp;lt;int&amp;gt;{}}; for(int i = 0; i &amp;lt; nums.size(); i+=3){ if((nums[i+2] - nums[i]) &amp;lt;= k) { ans[i/3] = {nums[i], nums[i+1], nums[i+2]}; } else { return vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;{}; } } return ans; } };</description></item><item><title>Valid Palindrome</title><link>https://jackeryli.github.io/leetcode/125/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/leetcode/125/</guid><description>class Solution { public: bool isPalindrome(string s) { // two point left and right // if meet not alpha or number, skip // compare s[left] and s[right] // if equal, continue // if not equal return false // if left == right, return true int left = 0, right = s.size() - 1; for(; left &amp;lt; right; left++, right--) { while(left &amp;lt; right &amp;amp;&amp;amp; !isalnum(s[left])) { left++; } while(left &amp;lt; right &amp;amp;&amp;amp; !</description></item></channel></rss>