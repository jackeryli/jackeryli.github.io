<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jacklatte‚òï</title>
    <link>https://jacklatte.github.io/</link>
    <description>Recent content on Jacklatte‚òï</description>
    <image>
      <url>https://jacklatte.github.io/avatar.jpg</url>
      <link>https://jacklatte.github.io/avatar.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 10 Apr 2021 21:43:38 +0800</lastBuildDate><atom:link href="https://jacklatte.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Write a imgur upload service with go</title>
      <link>https://jacklatte.github.io/posts/go-imgur/</link>
      <pubDate>Sat, 10 Apr 2021 21:43:38 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/go-imgur/</guid>
      <description>Background Most of the services need a image upload services. Some applications like Ptt, Dcard and HackMD use Imgur to store pictures. Imgur provides free spaces for users to upload their images, and it also provides API so that programers can upload images by sending POST request. In this tutorial, we are going to build a imgur upload service.
Packages Used  gonic/gin: http server bytes: store images encoding/json: process response io: transfer io.</description>
    </item>
    
    <item>
      <title>Netstat</title>
      <link>https://jacklatte.github.io/posts/linux-netstat/</link>
      <pubDate>Tue, 14 Apr 2020 15:59:31 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/linux-netstat/</guid>
      <description>A command which often use to check network stats</description>
    </item>
    
    <item>
      <title>Install ngx_http_geoip_module for ip analysis</title>
      <link>https://jacklatte.github.io/posts/ngx_http_geoip_module-installation/</link>
      <pubDate>Tue, 14 Apr 2020 12:18:32 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/ngx_http_geoip_module-installation/</guid>
      <description>Ngx-http-geoip-module can enable Internet traffic analysis for indivisual conuntry.</description>
    </item>
    
    <item>
      <title>Install nginx-module-vts for monitoring</title>
      <link>https://jacklatte.github.io/posts/nginx-module-vts-installation/</link>
      <pubDate>Tue, 14 Apr 2020 10:23:09 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/nginx-module-vts-installation/</guid>
      <description>Nginx-module-vts is designed to monitor Internet traffic on Nginx.</description>
    </item>
    
    <item>
      <title>Stream Analytics Platform</title>
      <link>https://jacklatte.github.io/projects/sad/</link>
      <pubDate>Mon, 13 Apr 2020 16:18:10 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/projects/sad/</guid>
      <description>This project is built for smart campus</description>
    </item>
    
    <item>
      <title>Freebsd VM Installation</title>
      <link>https://jacklatte.github.io/posts/freebsd-vm-install/</link>
      <pubDate>Sun, 12 Apr 2020 16:18:10 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/freebsd-vm-install/</guid>
      <description>Environment Our testbed is running at
 Windows 10 VMware Workstation 15 player  Download FreeBSD Go to Freebsd website. You can download the install image (.iso) or the VM image (.vmdk). In this tutorial, we choose VM image for faster installation.</description>
    </item>
    
    <item>
      <title>NTHU Arts Center Website</title>
      <link>https://jacklatte.github.io/projects/arts-nthu/</link>
      <pubDate>Sun, 12 Apr 2020 16:18:10 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/projects/arts-nthu/</guid>
      <description>NTHU Arts Center Official Website, built by go, postgresql, react and docker</description>
    </item>
    
    <item>
      <title>How to use async-std</title>
      <link>https://jacklatte.github.io/posts/how-to-use-async-std/</link>
      <pubDate>Sun, 12 Apr 2020 14:08:30 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/how-to-use-async-std/</guid>
      <description>Now, rust has two ways to write async functions, async-std and tokio. Let&amp;rsquo;s first start with async-std.
Add dependencies in Cargo.toml  Note that attributes is used for #[async_std::main].
 Filename: Cargo.toml
[dependencies] async-std = { version = &amp;#34;1.6.5&amp;#34;, features = [&amp;#34;attributes&amp;#34;] } Write functions Filename: src/hello.rs
 async main requires return a std::io::Result.
 #[async_std::main]asyncfn main()-&amp;gt; std::io::Result&amp;lt;()&amp;gt;{println!(&amp;#34;hello world!&amp;#34;);Ok(())}Build your code cargo run </description>
    </item>
    
    <item>
      <title>Write a request limiter in Go</title>
      <link>https://jacklatte.github.io/posts/go-request-limiter/</link>
      <pubDate>Sun, 12 Apr 2020 14:08:30 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/go-request-limiter/</guid>
      <description>A middleware which can restrict ip request in certain time window</description>
    </item>
    
    <item>
      <title>Push hugo to Github Page</title>
      <link>https://jacklatte.github.io/posts/hugo-to-github/</link>
      <pubDate>Sun, 12 Apr 2020 11:39:20 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/hugo-to-github/</guid>
      <description>We push our hugo website to Github Page.</description>
    </item>
    
    <item>
      <title>Install Hugo on MacOS</title>
      <link>https://jacklatte.github.io/posts/hugo-install/</link>
      <pubDate>Sat, 11 Apr 2020 11:39:20 +0800</pubDate>
      
      <guid>https://jacklatte.github.io/posts/hugo-install/</guid>
      <description>&lt;code&gt;Hugo&lt;/code&gt; is the fastest static website generator in the world. It is really suitable for software developers to generate their personal website. In this tutorial, we start to build up a website which used &lt;code&gt;Hugo&lt;/code&gt;.</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://jacklatte.github.io/posts/test/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jacklatte.github.io/posts/test/</guid>
      <description>A brief description of Hugo Shortcodes</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://jacklatte.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacklatte.github.io/about/</guid>
      <description>Jack Li B.A. Computer Science / National Tsing Hua University, Taiwan / 2017-2021
üíº Experiences Software Engineer, LINE, Taiwan, July, 2021 ~ Present Springboot / MySQL / Redis / Kubernetes / Kafka
 Develop Restful API services with SpringBoot, MySQL and Redis. Design unit tests and build automated CI/CD pipeline with JUnit and Jenkins. Build scalable and fault-tolerance system with Docker, Kubernetes and Kafka.  ‚òéÔ∏è Contact  Email: jack.yenchun.li@gmail.com Github: https://github.</description>
    </item>
    
    
    
  </channel>
</rss>
