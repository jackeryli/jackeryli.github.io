<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://jackeryli.github.io/leetcode/dp/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://jackeryli.github.io/leetcode/dp/index.xml" rel="self" type="application/rss+xml"/><item><title>0063. Unique Path II</title><link>https://jackeryli.github.io/leetcode/dp/0063/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/leetcode/dp/0063/</guid><description>class Solution { public: int uniquePathsWithObstacles(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;&amp;amp; obstacleGrid) { int m = obstacleGrid.size(); int n = obstacleGrid[0].size(); int dp[m][n]; memset(dp, 0, sizeof(dp)); for(int i = 0; i &amp;lt; m &amp;amp;&amp;amp; obstacleGrid[i][0] == 0; i++) dp[i][0] = 1; for(int j = 0; j &amp;lt; n &amp;amp;&amp;amp; obstacleGrid[0][j] == 0; j++) dp[0][j] = 1; for(int i = 1; i &amp;lt; m; i++) { for(int j = 1; j &amp;lt; n; j++) { if(obstacleGrid[i][j] !</description></item></channel></rss>