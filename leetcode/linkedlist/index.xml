<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://jackeryli.github.io/leetcode/linkedlist/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://jackeryli.github.io/leetcode/linkedlist/index.xml" rel="self" type="application/rss+xml"/><item><title>0024. Swap nodes by pairs</title><link>https://jackeryli.github.io/leetcode/linkedlist/0024/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/leetcode/linkedlist/0024/</guid><description>/** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public: ListNode* swapPairs(ListNode* head) { // 1 2 3 4 // s f ListNode* dummy = new ListNode(); dummy-&amp;gt;next = head; ListNode* fast = dummy; ListNode* slow = dummy; ListNode* before = dummy; while(fast-&amp;gt;next !</description></item></channel></rss>