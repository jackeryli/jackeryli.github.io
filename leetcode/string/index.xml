<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://jackeryli.github.io/leetcode/string/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://jackeryli.github.io/leetcode/string/index.xml" rel="self" type="application/rss+xml"/><item><title>0006.Zigzag Conversion</title><link>https://jackeryli.github.io/leetcode/string/0006/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/leetcode/string/0006/</guid><description>class Solution { public String convert(String s, int numRows) { if(numRows == 1) return s; int n = s.length(); StringBuilder[] sb = new StringBuilder[numRows]; int row = 0; int dir = 1; for(int i = 0; i &amp;lt; n; i++) { if(sb[row] == null) sb[row] = new StringBuilder(); sb[row].append(s.charAt(i)); if(row == numRows - 1 || ((row == 0) &amp;amp;&amp;amp; (i != 0))) dir = -dir; row += dir; } StringBuilder result = new StringBuilder(); for(int i = 0; i &amp;lt; numRows; i++) { if(sb[i] == null) continue; result.</description></item><item><title>58. Length of Last Word</title><link>https://jackeryli.github.io/leetcode/string/0058/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/leetcode/string/0058/</guid><description>class Solution { public: int lengthOfLastWord(string s) { int n = s.size(); int l = n-1; int r = l; while(r &amp;gt;= 0 &amp;amp;&amp;amp; s[r] == &amp;#39; &amp;#39;) r--; l = r; while(l &amp;gt;= 0 &amp;amp;&amp;amp; s[l] != &amp;#39; &amp;#39;) l--; return r - l; } };</description></item></channel></rss>