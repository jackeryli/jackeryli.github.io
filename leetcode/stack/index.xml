<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://jackeryli.github.io/leetcode/stack/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://jackeryli.github.io/leetcode/stack/index.xml" rel="self" type="application/rss+xml"/><item><title>0020.Valid Parentheses</title><link>https://jackeryli.github.io/leetcode/stack/0020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/leetcode/stack/0020/</guid><description>class Solution { public: bool isValid(string s) { stack&amp;lt;char&amp;gt; sta; for(char c : s){ if(c == &amp;#39;(&amp;#39; || c == &amp;#39;[&amp;#39; || c == &amp;#39;{&amp;#39;){ sta.push(c); } else { if(sta.empty()){ return false; } int t = sta.top(); if(c == &amp;#39;)&amp;#39; &amp;amp;&amp;amp; t != &amp;#39;(&amp;#39;){ return false; } else if (c == &amp;#39;]&amp;#39; &amp;amp;&amp;amp; t != &amp;#39;[&amp;#39;){ return false; } else if (c == &amp;#39;}&amp;#39; &amp;amp;&amp;amp; t != &amp;#39;{&amp;#39;){ return false; } sta.</description></item><item><title>739. Daily Temperatures</title><link>https://jackeryli.github.io/leetcode/stack/0739/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jackeryli.github.io/leetcode/stack/0739/</guid><description>class Solution { public: vector&amp;lt;int&amp;gt; dailyTemperatures(vector&amp;lt;int&amp;gt;&amp;amp; temperatures) { stack&amp;lt;int&amp;gt; sta; vector&amp;lt;int&amp;gt; result(temperatures.size(), 0); for(int i = 0; i &amp;lt; temperatures.size(); i++){ while(!sta.empty() &amp;amp;&amp;amp; temperatures[sta.top()] &amp;lt; temperatures[i]){ result[sta.top()] = i - sta.top(); sta.pop(); } sta.push(i); } return result; } };</description></item></channel></rss>