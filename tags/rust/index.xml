<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on yenchunli Website</title><link>http://127.0.0.1/tags/rust/</link><description>Recent content in rust on yenchunli Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 12 Apr 2020 14:08:30 +0800</lastBuildDate><atom:link href="http://127.0.0.1/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>How to use async-std</title><link>http://127.0.0.1/posts/how-to-use-async-std/</link><pubDate>Sun, 12 Apr 2020 14:08:30 +0800</pubDate><guid>http://127.0.0.1/posts/how-to-use-async-std/</guid><description>Now, rust has two ways to write async functions, async-std and tokio. Let&amp;rsquo;s first start with async-std.
Add dependencies in Cargo.toml Note that attributes is used for #[async_std::main].
Filename: Cargo.toml
[dependencies] async-std = { version = &amp;#34;1.6.5&amp;#34;, features = [&amp;#34;attributes&amp;#34;] } Write functions Filename: src/hello.rs
async main requires return a std::io::Result.
#[async_std::main] async fn main() -&amp;gt; std::io::Result&amp;lt;()&amp;gt; { println!(&amp;#34;hello world!&amp;#34;); Ok(()) } Build your code cargo run</description></item></channel></rss>